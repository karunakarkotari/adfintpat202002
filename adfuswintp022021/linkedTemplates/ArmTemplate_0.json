{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfuswintp022021"
		},
		"LS_AzureSQL_CargoDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSQL_CargoDB'"
		},
		"LS_AzureSQL_CargoSourceDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSQL_CargoSourceDB'"
		},
		"LS_BlobStorageAcc_ipstorageaccount_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_BlobStorageAcc_ipstorageaccount'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSQL_CargoDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSQL_CargoDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSQL_CargoSourceDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSQL_CargoSourceDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BlobStorageAcc_ipstorageaccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_BlobStorageAcc_ipstorageaccount_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-Selfhosted-IPICoargoServer')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Blob_Source_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorageAcc_ipstorageaccount",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dsprSourceFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().dsprSourceFileName",
							"type": "Expression"
						},
						"container": "ltlorderspoc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorageAcc_ipstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Blob_Source_Trips')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorageAcc_ipstorageaccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Trips.csv",
						"container": "ltlorderspoc"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorageAcc_ipstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Blob_Target_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorageAcc_ipstorageaccount",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dsprTargetFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().dsprTargetFileName,formatDateTime(utcnow(),'_yyyy-MM-dd hh:mm:ss'))",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
							"type": "Expression"
						},
						"container": "dispatchorders"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorageAcc_ipstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Blob_Target_Trips')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BlobStorageAcc_ipstorageaccount",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "dispatchorders"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BlobStorageAcc_ipstorageaccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_Cargo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSQL_CargoDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CSD_CODE",
						"type": "nvarchar"
					},
					{
						"name": "FILE_NO",
						"type": "nvarchar"
					},
					{
						"name": "LOT_NO",
						"type": "nvarchar"
					},
					{
						"name": "OCEAN_AIR",
						"type": "nvarchar"
					},
					{
						"name": "CUST_CODE",
						"type": "nvarchar"
					},
					{
						"name": "STRIP_DATE",
						"type": "date"
					},
					{
						"name": "HOLD",
						"type": "nvarchar"
					},
					{
						"name": "DAD",
						"type": "nvarchar"
					},
					{
						"name": "RECEIVED_DATE",
						"type": "date"
					},
					{
						"name": "CONTAINER",
						"type": "nvarchar"
					},
					{
						"name": "PCS",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "POUNDS",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "CUBE",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "PICKUP_DATE",
						"type": "date"
					},
					{
						"name": "HOUSE_REF_NO",
						"type": "nvarchar"
					},
					{
						"name": "COMMODITY1",
						"type": "nvarchar"
					},
					{
						"name": "STATE",
						"type": "nvarchar"
					},
					{
						"name": "ZIP_CNTY",
						"type": "nvarchar"
					},
					{
						"name": "CONSIGNEE",
						"type": "nvarchar"
					},
					{
						"name": "STATUS",
						"type": "nvarchar"
					},
					{
						"name": "TRANSFER_YN",
						"type": "nvarchar"
					},
					{
						"name": "RELEASEFD_YN",
						"type": "nvarchar"
					},
					{
						"name": "INSERTED_TIMESTAMP",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TblClearedCargo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSQL_CargoDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_CargoSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSQL_CargoSourceDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CSD_CODE",
						"type": "nvarchar"
					},
					{
						"name": "FILE_NO",
						"type": "nvarchar"
					},
					{
						"name": "LOT_NO",
						"type": "nvarchar"
					},
					{
						"name": "OCEAN_AIR",
						"type": "nvarchar"
					},
					{
						"name": "CUST_CODE",
						"type": "nvarchar"
					},
					{
						"name": "STRIP_DATE",
						"type": "date"
					},
					{
						"name": "HOLD",
						"type": "nvarchar"
					},
					{
						"name": "DAD",
						"type": "nvarchar"
					},
					{
						"name": "RECEIVED_DATE",
						"type": "date"
					},
					{
						"name": "CONTAINER",
						"type": "nvarchar"
					},
					{
						"name": "PCS",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "POUNDS",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "CUBE",
						"type": "decimal",
						"precision": 12,
						"scale": 3
					},
					{
						"name": "PICKUP_DATE",
						"type": "date"
					},
					{
						"name": "HOUSE_REF_NO",
						"type": "nvarchar"
					},
					{
						"name": "COMMODITY1",
						"type": "nvarchar"
					},
					{
						"name": "STATE",
						"type": "nvarchar"
					},
					{
						"name": "ZIP_CNTY",
						"type": "nvarchar"
					},
					{
						"name": "CONSIGNEE",
						"type": "nvarchar"
					},
					{
						"name": "STATUS",
						"type": "nvarchar"
					},
					{
						"name": "TRANSFER_YN",
						"type": "nvarchar"
					},
					{
						"name": "RELEASEFD_YN",
						"type": "nvarchar"
					},
					{
						"name": "INSERTED_TIMESTAMP",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "TblClearedCargo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSQL_CargoSourceDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_Cargo_Dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSQL_CargoDB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dsTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().dsTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSQL_CargoDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_IncrementalSync')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_last_sync_dt",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get_max_inserted_dt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select CSD_CODE\n,FILE_NO\n,LOT_NO\n,OCEAN_AIR\n,CUST_CODE\n,STRIP_DATE\n,HOLD\n,DAD\n,RECEIVED_DATE\n,CONTAINER\n,PCS\n,POUNDS\n,CUBE\n,PICKUP_DATE\n,HOUSE_REF_NO\n,COMMODITY1\n,STATE\n,ZIP_CNTY\n,CONSIGNEE\n,STATUS\n,TRANSFER_YN\n,RELEASEFD_YN\nFrom [dbo].[TblClearedCargo]\nwhere INSERTED_TIMESTAMP >'@{activity('get_last_sync_dt').output.firstRow.LastSyncTimestamp}'  and INSERTED_TIMESTAMP<='@{activity('get_max_inserted_dt').output.firstRow.MaxInsetedTimestamp}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_CargoSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_Cargo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "get_last_sync_dt",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select LastSyncTimestamp,TableName from [dbo].[LogSyncTimestamp] where TableName='TblClearedCargo'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_Cargo",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "get_max_inserted_dt",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(INSERTED_TIMESTAMP) MaxInsetedTimestamp from [dbo].[TblClearedCargo]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_CargoSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_UPDATE_SYNCTIMESTAMP]",
							"storedProcedureParameters": {
								"SyncTimeStamp": {
									"value": {
										"value": "@activity('get_max_inserted_dt').output.firstRow.MaxInsetedTimestamp",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@activity('get_last_sync_dt').output.firstRow.TableName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSQL_CargoDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-06T15:47:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_CargoSource')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_Cargo')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSQL_CargoDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_IncrementalSync_Parameterized')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_last_sync_dt",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "get_max_inserted_dt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select *\nFrom @{pipeline().parameters.TableName}\nwhere INSERTED_TIMESTAMP >'@{activity('get_last_sync_dt').output.firstRow.LastSyncTimestamp}'  and INSERTED_TIMESTAMP<='@{activity('get_max_inserted_dt').output.firstRow.MaxInsetedTimestamp}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SQL_CargoSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_Cargo_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"dsTableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "get_last_sync_dt",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select LastSyncTimestamp,TableName from [dbo].[LogSyncTimestamp] where TableName='@{pipeline().parameters.TableName}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_Cargo",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "get_max_inserted_dt",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select max(INSERTED_TIMESTAMP) MaxInsetedTimestamp from @{pipeline().parameters.TableName}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_CargoSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_UPDATE_SYNCTIMESTAMP]",
							"storedProcedureParameters": {
								"SyncTimeStamp": {
									"value": {
										"value": "@activity('get_max_inserted_dt').output.firstRow.MaxInsetedTimestamp",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@activity('get_last_sync_dt').output.firstRow.TableName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSQL_CargoDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-06T15:47:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_CargoSource')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_Cargo_Dynamic')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_Cargo')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSQL_CargoDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_movedispatchfiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Blob_Source_Trips",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Blob_Target_Trips",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-02-28T15:40:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Blob_Source_Trips')]",
				"[concat(variables('factoryId'), '/datasets/DS_Blob_Target_Trips')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_movedispatchfiles_dynamic')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Blob_Source_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"dsprSourceFileName": {
										"value": "@pipeline().parameters.plprFileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Blob_Target_Trips",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"plprFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-02-28T15:40:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Blob_Source_Dynamic')]",
				"[concat(variables('factoryId'), '/datasets/DS_Blob_Target_Trips')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_movedispatchfiles_iffileexists')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Blob_Source_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"dsprSourceFileName": {
										"value": "@pipeline().parameters.plprFileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata1').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Blob_Source_Dynamic",
											"type": "DatasetReference",
											"parameters": {
												"dsprSourceFileName": {
													"value": "@pipeline().parameters.plprFileName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Blob_Target_Trips",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"plprFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-02-28T16:40:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Blob_Source_Dynamic')]",
				"[concat(variables('factoryId'), '/datasets/DS_Blob_Target_Trips')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_movedispatchfiles_iffileexists_dynamic')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Blob_Source_Dynamic",
								"type": "DatasetReference",
								"parameters": {
									"dsprSourceFileName": {
										"value": "@pipeline().parameters.plprFileName",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('Get Metadata1').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy data1_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_Blob_Source_Dynamic",
											"type": "DatasetReference",
											"parameters": {
												"dsprSourceFileName": {
													"value": "@pipeline().parameters.plprFileName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Blob_Target_Dynamic",
											"type": "DatasetReference",
											"parameters": {
												"dsprTargetFileName": {
													"value": "@pipeline().parameters.plprFileName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"plprFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-02-28T15:54:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Blob_Source_Dynamic')]",
				"[concat(variables('factoryId'), '/datasets/DS_Blob_Target_Dynamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_IncrementalSync_Master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fetch_sync_tables_list",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TableName FROM [dbo].[ConfigSyncTables] WHERE IsActive=1 AND DeltaLoad=1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_SQL_Cargo",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "fetch_sync_tables_list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('fetch_sync_tables_list').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "PL_IncrementalSync_Parameterized",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TableName": {
												"value": "@{item().TableName}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-06T17:09:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SQL_Cargo')]",
				"[concat(variables('factoryId'), '/pipelines/PL_IncrementalSync_Parameterized')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TRG_PL_INCR_SYNC_MSTR')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_IncrementalSync_Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 2,
						"startTime": "2021-03-06T17:07:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_IncrementalSync_Master')]"
			]
		}
	]
}